
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
import tkinter as tk

from firebase_functions import AddBook

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\felip\OneDrive\Área de Trabalho\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("433x364")
window.configure(bg = "#AA6464")


def handle_add_book():
    nome_livro = entry_1.get()
    nome_autor = entry_2.get()
    ano_publicacao = entry_3.get()
    nome_editora = entry_4.get()

    try:
        AddBook(nome_livro, nome_autor, ano_publicacao, nome_editora)
        messagebox.showinfo("Success", f"{nome_livro} criado com sucesso")
        entries = [entry_1, entry_2, entry_3, entry_4]
        for entry in entries:
            entry.delete(0, tk.END)
    except Exception as e:
        messagebox.showerror("Erro", str(e))


from firebase_functions import SearchBook

def handle_search_book():
    nome_livro = entry_1.get()

    try:
        livro = SearchBook(nome_livro)
        if livro is not None:
            entry_1.delete(0, tk.END)
            entry_1.insert(0, livro.get('nome_livro', ''))  # Nome do livro
            entry_2.delete(0, tk.END)
            entry_2.insert(0, livro.get('nome_autor', ''))  # Nome do autor
            entry_3.delete(0, tk.END)
            entry_3.insert(0, livro.get('ano_publicacao', ''))  # Ano de publicação
            entry_4.delete(0, tk.END)
            entry_4.insert(0, livro.get('nome_editora', ''))  # Nome da editora
        else:
            messagebox.showinfo("Livro não encontrado", f"O livro {nome_livro} não foi encontrado")
    except Exception as e:
        messagebox.showerror("Erro", str(e))


from firebase_functions import UpdateBook

def handle_update_book():
    nome_livro = entry_1.get()
    nome_autor = entry_2.get()
    ano_publicacao = entry_3.get()
    nome_editora = entry_4.get()

    try:
        livro_search = SearchBook(nome_livro)
        if livro_search is not None:
            UpdateBook(nome_livro, nome_autor, ano_publicacao, nome_editora)
            messagebox.showinfo("Success", f"{nome_livro} atualizado com sucesso")
            handle_search_book()
        else:
            messagebox.showinfo("Livro não encontrado", f"O livro {nome_livro} não foi encontrado")
    except Exception as e:
        messagebox.showerror("Erro", str(e)) 

from firebase_functions import DeleteBook

def handle_excluir_livro():
    nome_livro = entry_1.get()

    try:
        livro = SearchBook(nome_livro)
        if livro is not None:
            try:
                DeleteBook(nome_livro)
                messagebox.showinfo("Success", f"{nome_livro} deletado com sucesso")
                clear_entries()
            except:
                messagebox.showerror("Erro", "Erro ao deletar livro")
        else:
            messagebox.showinfo("Livro não encontrado", f"O livro {nome_livro} não foi encontrado")
    except Exception as e:
        messagebox.showerror("Erro", str(e)) 



def clear_entries():
    entries = [entry_1, entry_2, entry_3, entry_4]
    for entry in entries:
        entry.delete(0, tk.END)

canvas = Canvas(
    window,
    bg = "#AA6464",
    height = 364,
    width = 433,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    216.0,
    36.0,
    image=image_image_1
)


#ENTRY DO NOME DO LIVRO
entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    322.5,
    102.5,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=239.5,
    y=88.0,
    width=166.0,
    height=27.0
)


#ENTRY DO NOME DO AUTOR
entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    322.5,
    149.5,
    image=entry_image_2
)
entry_2 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=239.5,
    y=135.0,
    width=166.0,
    height=27.0
)

#ENTRY DO ANO DE PUBLICAÇÃO
entry_image_3 = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    322.5,
    196.5,
    image=entry_image_3
)
entry_3 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_3.place(
    x=239.5,
    y=182.0,
    width=166.0,
    height=27.0
)


#ENTRY DO NOME DA EDITORA
entry_image_4 = PhotoImage(
    file=relative_to_assets("entry_4.png"))
entry_bg_4 = canvas.create_image(
    322.5,
    243.5,
    image=entry_image_4
)
entry_4 = Entry(
    bd=0,
    bg="#FFFFFF",
    fg="#000716",
    highlightthickness=0
)
entry_4.place(
    x=239.5,
    y=229.0,
    width=166.0,
    height=27.0
)

canvas.create_text(
    21.0,
    22.0,
    anchor="nw",
    text="CRUD LIVROS",
    fill="#000000",
    font=("Inter Bold", 24 * -1)
)

canvas.create_text(
    21.0,
    90.0,
    anchor="nw",
    text="Nome do livro",
    fill="#FFFFFF",
    font=("Inter Bold", 22 * -1)
)

canvas.create_text(
    21.0,
    230.0,
    anchor="nw",
    text="nome da editora",
    fill="#FFFFFF",
    font=("Inter Bold", 22 * -1)
)

canvas.create_text(
    21.0,
    183.0,
    anchor="nw",
    text="Ano de publicação",
    fill="#FFFFFF",
    font=("Inter Bold", 22 * -1)
)

canvas.create_text(
    21.0,
    135.0,
    anchor="nw",
    text="Nome do autor\n",
    fill="#FFFFFF",
    font=("Inter Bold", 22 * -1)
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_1 clicked"),
    relief="flat"
)
button_1.place(
    x=170.0,
    y=320.0,
    width=92.0,
    height=29.0
)
button_1.config(command=clear_entries)


button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_2 = Button(
    image=button_image_2,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_2 clicked"),
    relief="flat"
)
button_2.place(
    x=323.0,
    y=275.0,
    width=92.0,
    height=29.0
)
button_2.config(command=handle_excluir_livro)

button_image_3 = PhotoImage(
    file=relative_to_assets("button_3.png"))
button_3 = Button(
    image=button_image_3,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_3 clicked"),
    relief="flat"
)
button_3.place(
    x=9.0,
    y=275.0,
    width=92.0,
    height=29.0
)
button_3.config(command=handle_add_book)

button_image_4 = PhotoImage(
    file=relative_to_assets("button_4.png"))
button_4 = Button(
    image=button_image_4,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_4 clicked"),
    relief="flat"
)
button_4.place(
    x=112.0,
    y=275.0,
    width=92.0,
    height=29.0
)
button_4.config(command=handle_search_book)


button_image_5 = PhotoImage(
    file=relative_to_assets("button_5.png"))
button_5 = Button(
    image=button_image_5,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_5 clicked"),
    relief="flat"
)
button_5.place(
    x=216.0,
    y=275.0,
    width=92.0,
    height=29.0
)
button_5.config(command=handle_update_book)


window.resizable(False, False)
window.mainloop()
